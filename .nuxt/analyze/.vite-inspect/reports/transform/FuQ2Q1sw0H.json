{
  "resolvedId": "D:/Projects/Web Dev/fu-mission-board-nuxt/node_modules/markdown-it/lib/rules_inline/text.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n",
      "start": 1711659332396,
      "end": 1711659332424,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711659332424,
      "end": 1711659332424,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711659332424,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711659332425,
      "end": 1711659332425,
      "order": "normal"
    }
  ]
}

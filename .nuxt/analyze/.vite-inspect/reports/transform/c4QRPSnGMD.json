{
  "resolvedId": "D:/Projects/Web Dev/fu-mission-board-nuxt/node_modules/markdown-it/lib/rules_block/hr.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n",
      "start": 1711659332382,
      "end": 1711659332404,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711659332404,
      "end": 1711659332404,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711659332405,
      "end": 1711659332405,
      "order": "normal"
    }
  ]
}

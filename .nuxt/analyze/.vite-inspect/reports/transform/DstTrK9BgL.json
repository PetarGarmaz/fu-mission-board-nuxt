{
  "resolvedId": "D:/Projects/Web Dev/fu-mission-board-nuxt/node_modules/markdown-it/lib/rules_block/lheading.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n",
      "start": 1711660237077,
      "end": 1711660237099,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711660237099,
      "end": 1711660237099,
      "order": "normal"
    }
  ]
}

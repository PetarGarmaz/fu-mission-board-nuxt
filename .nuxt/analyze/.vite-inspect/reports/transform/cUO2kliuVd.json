{
  "resolvedId": "D:/Projects/Web Dev/fu-mission-board-nuxt/node_modules/markdown-it/lib/rules_block/paragraph.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n",
      "start": 1711658792331,
      "end": 1711658792356,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711658792356,
      "end": 1711658792356,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711658792356,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711658792357,
      "end": 1711658792357,
      "order": "normal"
    }
  ]
}

{
  "resolvedId": "D:/Projects/Web Dev/fu-mission-board-nuxt/node_modules/markdown-it/lib/rules_inline/escape.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n",
      "start": 1711658792338,
      "end": 1711658792364,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1711658792364,
      "end": 1711658792364,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1711658792364,
      "end": 1711658792364,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1711658792364,
      "end": 1711658792364,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1711658792364,
      "end": 1711658792364,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1711658792364,
      "end": 1711658792364,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1711658792364,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1711658792365,
      "end": 1711658792365,
      "order": "normal"
    }
  ]
}
